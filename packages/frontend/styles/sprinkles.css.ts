import { defineProperties, createSprinkles } from "@vanilla-extract/sprinkles";
import {
  borderWidths,
  colors,
  fontSizes,
  lineHeights,
  radii,
  space,
  timing,
} from "./vars.css";
import './reset.css';

const flexAlignment = ["flex-start", "center", "flex-end", "stretch"] as const;

const unresponsiveProperties = defineProperties({
  properties: {
    fontFamily: {
      sans: `system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"`,
    },
    borderStyle: ["dashed"],
    visibility: ["hidden", "visible"],
    whiteSpace: [
      "normal",
      "nowrap",
      "pre",
      "pre-line",
      "pre-wrap",
      "initial",
      "inherit",
    ],
    wordBreak: ["break-word", "break-all"],
    objectFit: ["contain", "cover"],
    zIndex: {
      "0": 0,
      "10": 10,
      "20": 20,
      "30": 30,
      "40": 40,
      "50": 50,
      "75": 75,
      "100": 100,
      "9999": 9999,
      auto: "auto",
    },
    fontStyle: ["italic", "underline"],
    textAlign: ["left", "center", "right"],
    textTransform: ["capitalize", "lowercase", "uppercase"],
    fontWeight: {
      normal: "400",
      bold: "500",
      inherit: "inherit",
    },
    lineHeight: lineHeights,
    cursor: ["default", "pointer", "not-allowed", "text"],
    transitionProperty: {
      none: "none",
      all: "all",
      default:
        "background-color, border-color, color, fill, stroke, opacity, box-shadow, transform",
      colors: "background-color, border-color, color, fill, stroke",
      opacity: "opacity",
      shadow: "box-shadow",
      transform: "transform",
    },
    transitionTimingFunction: timing,
    borderColor: colors,
    color: colors,
    backgroundColor: colors,
    placeItems: [...flexAlignment, "baseline"],
    alignItems: [...flexAlignment, "baseline"],
    alignSelf: [...flexAlignment, "baseline"],
    borderRadius: radii,
    borderBottomRightRadius: radii,
    borderBottomLeftRadius: radii,
    borderTopLeftRadius: radii,
    borderTopRightRadius: radii,
    flex: {
      1: "1 1 0%",
      auto: "1 1 auto",
      initial: "0 1 auto",
      none: "none",
    },
    flexGrow: ["1"],
    flexShrink: ["1", "0"],
    flexWrap: ["wrap", "nowrap"],
    fontSize: {
      ...fontSizes,
      inherit: "inherit",
    },
    maxWidth: {
      ...space,
      none: "none",
    },
    minHeight: {
      ...space,
      none: "none",
    },
    maxHeight: {
      ...space,
      none: "none",
    },
    justifyItems: [...flexAlignment, "space-around", "space-between"],
    top: space,
    bottom: space,
    left: space,
    right: space,
    gap: space,
    borderWidth: borderWidths,
    borderBottomWidth: borderWidths,
    borderLeftWidth: borderWidths,
    borderRightWidth: borderWidths,
    borderTopWidth: borderWidths,
    strokeWidth: borderWidths,
    width: space,
    overflow: ["auto", "hidden", "scroll", "unset"],
    position: ["absolute", "fixed", "relative", "sticky"],
    marginLeft: space,
    marginRight: space,
    marginBottom: space,
    marginTop: space,
    paddingBottom: space,
    paddingTop: space,
    paddingLeft: space,
    paddingRight: space,
    flexDirection: ["column", "row"],
    justifyContent: [...flexAlignment, "space-around", "space-between"],
    height: space,
    display: [
      "block",
      "flex",
      "grid",
      "none",
      "contents",
      "inline",
      "inline-flex",
    ],
    gridTemplateColumns: {
      "2": "repeat(2, minmax(0, 1fr))",
    },
    minWidth: space,
    boxShadow: {
      extraSmall: "0px 2px 8px rgba(0, 0, 0, 0.1)",
    },
    transitionDuration: {
      "200": "200ms",
      "300": "300ms",
    },
  },
  shorthands: {
    borderLeftRadius: ["borderBottomLeftRadius", "borderTopLeftRadius"],
    borderRightRadius: ["borderBottomRightRadius", "borderTopRightRadius"],
    borderTopRadius: ["borderTopLeftRadius", "borderTopRightRadius"],
    borderBottomRadius: ["borderBottomLeftRadius", "borderBottomRightRadius"],
    margin: ["marginTop", "marginBottom", "marginLeft", "marginRight"],
    marginX: ["marginLeft", "marginRight"],
    marginY: ["marginTop", "marginBottom"],
    padding: ["paddingTop", "paddingBottom", "paddingLeft", "paddingRight"],
    paddingX: ["paddingLeft", "paddingRight"],
    paddingY: ["paddingTop", "paddingBottom"],
  },
});

export const sprinkles = createSprinkles(
  unresponsiveProperties,
);

export type Sprinkles = Parameters<typeof sprinkles>[0];
